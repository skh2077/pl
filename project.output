Terminals unused in grammar

    KW_THEN
    DL_DOT


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | KW_MAIN ID DL_SMCOLON declarations subprogram_declarations compound_statement

    3 declarations: type identifier_list DL_SMCOLON declarations
    4             | %empty

    5 subprogram_declarations: subprogram_declaration subprogram_declarations
    6                        | %empty

    7 compound_statement: KW_BEGIN statement_list KW_END

    8 type: standard_type
    9     | standard_type DL_LBRACK INTEGER DL_RBRACK

   10 identifier_list: ID
   11                | ID DL_COMMA identifier_list

   12 standard_type: KW_INT
   13              | KW_FLOAT

   14 subprogram_declaration: subprogram_head declarations compound_statement

   15 subprogram_head: KW_FUNC ID arguments DL_COLON standard_type DL_SMCOLON
   16                | KW_PROC ID arguments DL_SMCOLON

   17 arguments: DL_LPAREN parameter_list DL_RPAREN
   18          | %empty

   19 parameter_list: identifier_list DL_COLON type
   20               | identifier_list DL_COLON type DL_SMCOLON parameter_list

   21 statement_list: statement
   22               | statement DL_SMCOLON statement_list

   23 statement: variable DL_ASSIGN expression
   24          | print_statement
   25          | procedure_statement
   26          | compound_statement
   27          | if_statement
   28          | while_statement
   29          | for_statement
   30          | KW_RETURN expression
   31          | KW_NOP

   32 variable: ID
   33         | ID DL_LBRACK expression DL_RBRACK

   34 print_statement: KW_PRINT
   35                | KW_PRINT DL_LPAREN expression DL_RPAREN

   36 procedure_statement: ID DL_LPAREN actual_parameter_expression DL_RPAREN

   37 if_statement: KW_IF expression DL_COLON statement elif_statement
   38             | KW_IF expression DL_COLON statement elif_statement KW_ELSE DL_COLON statement

   39 elif_statement: %empty
   40               | elif_statement KW_ELIF expression DL_COLON statement

   41 while_statement: KW_WHILE expression DL_COLON statement
   42                | KW_WHILE expression DL_COLON statement KW_ELSE DL_COLON statement

   43 for_statement: KW_FOR for_expression KW_IN for_expression DL_COLON statement KW_ELSE DL_COLON statement
   44              | KW_FOR for_expression KW_IN for_expression DL_COLON statement

   45 for_expression: simple_expression

   46 actual_parameter_expression: %empty
   47                            | expression_list

   48 expression_list: expression
   49                | expression DL_COMMA expression_list

   50 expression: simple_expression
   51           | simple_expression relop simple_expression

   52 simple_expression: term
   53                  | term addop simple_expression

   54 term: factor
   55     | factor multop term

   56 factor: INTEGER
   57       | FLOAT
   58       | variable
   59       | procedure_statement
   60       | OP_NEG factor
   61       | sign factor

   62 sign: OP_ADD
   63     | OP_SUB

   64 relop: OP_GT
   65      | OP_GE
   66      | OP_LT
   67      | OP_LE
   68      | OP_EQUAL
   69      | OP_NOTEQ
   70      | KW_IN

   71 addop: OP_ADD
   72      | OP_SUB

   73 multop: OP_MUL
   74       | OP_DIV


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    ID <sval> (258) 2 10 11 15 16 32 33 36
    KW_MAIN <sval> (259) 2
    KW_FUNC <sval> (260) 15
    KW_PROC <sval> (261) 16
    KW_BEGIN <sval> (262) 7
    KW_END <sval> (263) 7
    KW_IF <sval> (264) 37 38
    KW_THEN <sval> (265)
    KW_ELSE <sval> (266) 38 42 43
    KW_ELIF <sval> (267) 40
    KW_NOP <sval> (268) 31
    KW_FOR <sval> (269) 43 44
    KW_WHILE <sval> (270) 41 42
    KW_RETURN <sval> (271) 30
    KW_PRINT <sval> (272) 34 35
    KW_IN <sval> (273) 43 44 70
    OP_ADD <sval> (274) 62 71
    OP_SUB <sval> (275) 63 72
    OP_MUL <sval> (276) 73
    OP_DIV <sval> (277) 74
    OP_LT <sval> (278) 66
    OP_LE <sval> (279) 67
    OP_GT <sval> (280) 64
    OP_GE <sval> (281) 65
    OP_EQUAL <sval> (282) 68
    OP_NOTEQ <sval> (283) 69
    OP_NEG <sval> (284) 60
    DL_SMCOLON <sval> (285) 2 3 15 16 20 22
    DL_DOT <sval> (286)
    DL_COMMA <sval> (287) 11 49
    DL_ASSIGN <sval> (288) 23
    DL_LPAREN <sval> (289) 17 35 36
    DL_RPAREN <sval> (290) 17 35 36
    DL_LBRACK <sval> (291) 9 33
    DL_RBRACK <sval> (292) 9 33
    DL_COLON <sval> (293) 15 19 20 37 38 40 41 42 43 44
    INTEGER <ival> (294) 9 56
    KW_INT <ival> (295) 12
    KW_FLOAT <ival> (296) 13
    FLOAT <fval> (297) 57


Nonterminals, with rules where they appear

    $accept (43)
        on left: 0
    program (44)
        on left: 1 2
        on right: 0
    declarations (45)
        on left: 3 4
        on right: 2 3 14
    subprogram_declarations (46)
        on left: 5 6
        on right: 2 5
    compound_statement (47)
        on left: 7
        on right: 2 14 26
    type <ival> (48)
        on left: 8 9
        on right: 3 19 20
    identifier_list <val_node_ptr> (49)
        on left: 10 11
        on right: 3 11 19 20
    standard_type <ival> (50)
        on left: 12 13
        on right: 8 9 15
    subprogram_declaration (51)
        on left: 14
        on right: 5
    subprogram_head (52)
        on left: 15 16
        on right: 14
    arguments (53)
        on left: 17 18
        on right: 15 16
    parameter_list (54)
        on left: 19 20
        on right: 17 20
    statement_list (55)
        on left: 21 22
        on right: 7 22
    statement (56)
        on left: 23 24 25 26 27 28 29 30 31
        on right: 21 22 37 38 40 41 42 43 44
    variable <symbol_ptr> (57)
        on left: 32 33
        on right: 23 58
    print_statement (58)
        on left: 34 35
        on right: 24
    procedure_statement (59)
        on left: 36
        on right: 25 59
    if_statement (60)
        on left: 37 38
        on right: 27
    elif_statement (61)
        on left: 39 40
        on right: 37 38 40
    while_statement (62)
        on left: 41 42
        on right: 28
    for_statement (63)
        on left: 43 44
        on right: 29
    for_expression (64)
        on left: 45
        on right: 43 44
    actual_parameter_expression (65)
        on left: 46 47
        on right: 36
    expression_list (66)
        on left: 48 49
        on right: 47 49
    expression (67)
        on left: 50 51
        on right: 23 30 33 35 37 38 40 41 42 48 49
    simple_expression (68)
        on left: 52 53
        on right: 45 50 51 53
    term (69)
        on left: 54 55
        on right: 52 53 55
    factor <symbol_ptr> (70)
        on left: 56 57 58 59 60 61
        on right: 54 55 60 61
    sign (71)
        on left: 62 63
        on right: 61
    relop (72)
        on left: 64 65 66 67 68 69 70
        on right: 51
    addop (73)
        on left: 71 72
        on right: 53
    multop (74)
        on left: 73 74
        on right: 55


State 0

    0 $accept: . program $end

    KW_MAIN  shift, and go to state 1

    $default  reduce using rule 1 (program)

    program  go to state 2


State 1

    2 program: KW_MAIN . ID DL_SMCOLON declarations subprogram_declarations compound_statement

    ID  shift, and go to state 3


State 2

    0 $accept: program . $end

    $end  shift, and go to state 4


State 3

    2 program: KW_MAIN ID . DL_SMCOLON declarations subprogram_declarations compound_statement

    DL_SMCOLON  shift, and go to state 5


State 4

    0 $accept: program $end .

    $default  accept


State 5

    2 program: KW_MAIN ID DL_SMCOLON . declarations subprogram_declarations compound_statement

    KW_INT    shift, and go to state 6
    KW_FLOAT  shift, and go to state 7

    $default  reduce using rule 4 (declarations)

    declarations   go to state 8
    type           go to state 9
    standard_type  go to state 10


State 6

   12 standard_type: KW_INT .

    $default  reduce using rule 12 (standard_type)


State 7

   13 standard_type: KW_FLOAT .

    $default  reduce using rule 13 (standard_type)


State 8

    2 program: KW_MAIN ID DL_SMCOLON declarations . subprogram_declarations compound_statement

    KW_FUNC  shift, and go to state 11
    KW_PROC  shift, and go to state 12

    $default  reduce using rule 6 (subprogram_declarations)

    subprogram_declarations  go to state 13
    subprogram_declaration   go to state 14
    subprogram_head          go to state 15


State 9

    3 declarations: type . identifier_list DL_SMCOLON declarations

    ID  shift, and go to state 16

    identifier_list  go to state 17


State 10

    8 type: standard_type .
    9     | standard_type . DL_LBRACK INTEGER DL_RBRACK

    DL_LBRACK  shift, and go to state 18

    $default  reduce using rule 8 (type)


State 11

   15 subprogram_head: KW_FUNC . ID arguments DL_COLON standard_type DL_SMCOLON

    ID  shift, and go to state 19


State 12

   16 subprogram_head: KW_PROC . ID arguments DL_SMCOLON

    ID  shift, and go to state 20


State 13

    2 program: KW_MAIN ID DL_SMCOLON declarations subprogram_declarations . compound_statement

    KW_BEGIN  shift, and go to state 21

    compound_statement  go to state 22


State 14

    5 subprogram_declarations: subprogram_declaration . subprogram_declarations

    KW_FUNC  shift, and go to state 11
    KW_PROC  shift, and go to state 12

    $default  reduce using rule 6 (subprogram_declarations)

    subprogram_declarations  go to state 23
    subprogram_declaration   go to state 14
    subprogram_head          go to state 15


State 15

   14 subprogram_declaration: subprogram_head . declarations compound_statement

    KW_INT    shift, and go to state 6
    KW_FLOAT  shift, and go to state 7

    $default  reduce using rule 4 (declarations)

    declarations   go to state 24
    type           go to state 9
    standard_type  go to state 10


State 16

   10 identifier_list: ID .
   11                | ID . DL_COMMA identifier_list

    DL_COMMA  shift, and go to state 25

    $default  reduce using rule 10 (identifier_list)


State 17

    3 declarations: type identifier_list . DL_SMCOLON declarations

    DL_SMCOLON  shift, and go to state 26


State 18

    9 type: standard_type DL_LBRACK . INTEGER DL_RBRACK

    INTEGER  shift, and go to state 27


State 19

   15 subprogram_head: KW_FUNC ID . arguments DL_COLON standard_type DL_SMCOLON

    DL_LPAREN  shift, and go to state 28

    $default  reduce using rule 18 (arguments)

    arguments  go to state 29


State 20

   16 subprogram_head: KW_PROC ID . arguments DL_SMCOLON

    DL_LPAREN  shift, and go to state 28

    $default  reduce using rule 18 (arguments)

    arguments  go to state 30


State 21

    7 compound_statement: KW_BEGIN . statement_list KW_END

    ID         shift, and go to state 31
    KW_BEGIN   shift, and go to state 21
    KW_IF      shift, and go to state 32
    KW_NOP     shift, and go to state 33
    KW_FOR     shift, and go to state 34
    KW_WHILE   shift, and go to state 35
    KW_RETURN  shift, and go to state 36
    KW_PRINT   shift, and go to state 37

    compound_statement   go to state 38
    statement_list       go to state 39
    statement            go to state 40
    variable             go to state 41
    print_statement      go to state 42
    procedure_statement  go to state 43
    if_statement         go to state 44
    while_statement      go to state 45
    for_statement        go to state 46


State 22

    2 program: KW_MAIN ID DL_SMCOLON declarations subprogram_declarations compound_statement .

    $default  reduce using rule 2 (program)


State 23

    5 subprogram_declarations: subprogram_declaration subprogram_declarations .

    $default  reduce using rule 5 (subprogram_declarations)


State 24

   14 subprogram_declaration: subprogram_head declarations . compound_statement

    KW_BEGIN  shift, and go to state 21

    compound_statement  go to state 47


State 25

   11 identifier_list: ID DL_COMMA . identifier_list

    ID  shift, and go to state 16

    identifier_list  go to state 48


State 26

    3 declarations: type identifier_list DL_SMCOLON . declarations

    KW_INT    shift, and go to state 6
    KW_FLOAT  shift, and go to state 7

    $default  reduce using rule 4 (declarations)

    declarations   go to state 49
    type           go to state 9
    standard_type  go to state 10


State 27

    9 type: standard_type DL_LBRACK INTEGER . DL_RBRACK

    DL_RBRACK  shift, and go to state 50


State 28

   17 arguments: DL_LPAREN . parameter_list DL_RPAREN

    ID  shift, and go to state 16

    identifier_list  go to state 51
    parameter_list   go to state 52


State 29

   15 subprogram_head: KW_FUNC ID arguments . DL_COLON standard_type DL_SMCOLON

    DL_COLON  shift, and go to state 53


State 30

   16 subprogram_head: KW_PROC ID arguments . DL_SMCOLON

    DL_SMCOLON  shift, and go to state 54


State 31

   32 variable: ID .
   33         | ID . DL_LBRACK expression DL_RBRACK
   36 procedure_statement: ID . DL_LPAREN actual_parameter_expression DL_RPAREN

    DL_LPAREN  shift, and go to state 55
    DL_LBRACK  shift, and go to state 56

    $default  reduce using rule 32 (variable)


State 32

   37 if_statement: KW_IF . expression DL_COLON statement elif_statement
   38             | KW_IF . expression DL_COLON statement elif_statement KW_ELSE DL_COLON statement

    ID       shift, and go to state 31
    OP_ADD   shift, and go to state 57
    OP_SUB   shift, and go to state 58
    OP_NEG   shift, and go to state 59
    INTEGER  shift, and go to state 60
    FLOAT    shift, and go to state 61

    variable             go to state 62
    procedure_statement  go to state 63
    expression           go to state 64
    simple_expression    go to state 65
    term                 go to state 66
    factor               go to state 67
    sign                 go to state 68


State 33

   31 statement: KW_NOP .

    $default  reduce using rule 31 (statement)


State 34

   43 for_statement: KW_FOR . for_expression KW_IN for_expression DL_COLON statement KW_ELSE DL_COLON statement
   44              | KW_FOR . for_expression KW_IN for_expression DL_COLON statement

    ID       shift, and go to state 31
    OP_ADD   shift, and go to state 57
    OP_SUB   shift, and go to state 58
    OP_NEG   shift, and go to state 59
    INTEGER  shift, and go to state 60
    FLOAT    shift, and go to state 61

    variable             go to state 62
    procedure_statement  go to state 63
    for_expression       go to state 69
    simple_expression    go to state 70
    term                 go to state 66
    factor               go to state 67
    sign                 go to state 68


State 35

   41 while_statement: KW_WHILE . expression DL_COLON statement
   42                | KW_WHILE . expression DL_COLON statement KW_ELSE DL_COLON statement

    ID       shift, and go to state 31
    OP_ADD   shift, and go to state 57
    OP_SUB   shift, and go to state 58
    OP_NEG   shift, and go to state 59
    INTEGER  shift, and go to state 60
    FLOAT    shift, and go to state 61

    variable             go to state 62
    procedure_statement  go to state 63
    expression           go to state 71
    simple_expression    go to state 65
    term                 go to state 66
    factor               go to state 67
    sign                 go to state 68


State 36

   30 statement: KW_RETURN . expression

    ID       shift, and go to state 31
    OP_ADD   shift, and go to state 57
    OP_SUB   shift, and go to state 58
    OP_NEG   shift, and go to state 59
    INTEGER  shift, and go to state 60
    FLOAT    shift, and go to state 61

    variable             go to state 62
    procedure_statement  go to state 63
    expression           go to state 72
    simple_expression    go to state 65
    term                 go to state 66
    factor               go to state 67
    sign                 go to state 68


State 37

   34 print_statement: KW_PRINT .
   35                | KW_PRINT . DL_LPAREN expression DL_RPAREN

    DL_LPAREN  shift, and go to state 73

    $default  reduce using rule 34 (print_statement)


State 38

   26 statement: compound_statement .

    $default  reduce using rule 26 (statement)


State 39

    7 compound_statement: KW_BEGIN statement_list . KW_END

    KW_END  shift, and go to state 74


State 40

   21 statement_list: statement .
   22               | statement . DL_SMCOLON statement_list

    DL_SMCOLON  shift, and go to state 75

    $default  reduce using rule 21 (statement_list)


State 41

   23 statement: variable . DL_ASSIGN expression

    DL_ASSIGN  shift, and go to state 76


State 42

   24 statement: print_statement .

    $default  reduce using rule 24 (statement)


State 43

   25 statement: procedure_statement .

    $default  reduce using rule 25 (statement)


State 44

   27 statement: if_statement .

    $default  reduce using rule 27 (statement)


State 45

   28 statement: while_statement .

    $default  reduce using rule 28 (statement)


State 46

   29 statement: for_statement .

    $default  reduce using rule 29 (statement)


State 47

   14 subprogram_declaration: subprogram_head declarations compound_statement .

    $default  reduce using rule 14 (subprogram_declaration)


State 48

   11 identifier_list: ID DL_COMMA identifier_list .

    $default  reduce using rule 11 (identifier_list)


State 49

    3 declarations: type identifier_list DL_SMCOLON declarations .

    $default  reduce using rule 3 (declarations)


State 50

    9 type: standard_type DL_LBRACK INTEGER DL_RBRACK .

    $default  reduce using rule 9 (type)


State 51

   19 parameter_list: identifier_list . DL_COLON type
   20               | identifier_list . DL_COLON type DL_SMCOLON parameter_list

    DL_COLON  shift, and go to state 77


State 52

   17 arguments: DL_LPAREN parameter_list . DL_RPAREN

    DL_RPAREN  shift, and go to state 78


State 53

   15 subprogram_head: KW_FUNC ID arguments DL_COLON . standard_type DL_SMCOLON

    KW_INT    shift, and go to state 6
    KW_FLOAT  shift, and go to state 7

    standard_type  go to state 79


State 54

   16 subprogram_head: KW_PROC ID arguments DL_SMCOLON .

    $default  reduce using rule 16 (subprogram_head)


State 55

   36 procedure_statement: ID DL_LPAREN . actual_parameter_expression DL_RPAREN

    ID       shift, and go to state 31
    OP_ADD   shift, and go to state 57
    OP_SUB   shift, and go to state 58
    OP_NEG   shift, and go to state 59
    INTEGER  shift, and go to state 60
    FLOAT    shift, and go to state 61

    $default  reduce using rule 46 (actual_parameter_expression)

    variable                     go to state 62
    procedure_statement          go to state 63
    actual_parameter_expression  go to state 80
    expression_list              go to state 81
    expression                   go to state 82
    simple_expression            go to state 65
    term                         go to state 66
    factor                       go to state 67
    sign                         go to state 68


State 56

   33 variable: ID DL_LBRACK . expression DL_RBRACK

    ID       shift, and go to state 31
    OP_ADD   shift, and go to state 57
    OP_SUB   shift, and go to state 58
    OP_NEG   shift, and go to state 59
    INTEGER  shift, and go to state 60
    FLOAT    shift, and go to state 61

    variable             go to state 62
    procedure_statement  go to state 63
    expression           go to state 83
    simple_expression    go to state 65
    term                 go to state 66
    factor               go to state 67
    sign                 go to state 68


State 57

   62 sign: OP_ADD .

    $default  reduce using rule 62 (sign)


State 58

   63 sign: OP_SUB .

    $default  reduce using rule 63 (sign)


State 59

   60 factor: OP_NEG . factor

    ID       shift, and go to state 31
    OP_ADD   shift, and go to state 57
    OP_SUB   shift, and go to state 58
    OP_NEG   shift, and go to state 59
    INTEGER  shift, and go to state 60
    FLOAT    shift, and go to state 61

    variable             go to state 62
    procedure_statement  go to state 63
    factor               go to state 84
    sign                 go to state 68


State 60

   56 factor: INTEGER .

    $default  reduce using rule 56 (factor)


State 61

   57 factor: FLOAT .

    $default  reduce using rule 57 (factor)


State 62

   58 factor: variable .

    $default  reduce using rule 58 (factor)


State 63

   59 factor: procedure_statement .

    $default  reduce using rule 59 (factor)


State 64

   37 if_statement: KW_IF expression . DL_COLON statement elif_statement
   38             | KW_IF expression . DL_COLON statement elif_statement KW_ELSE DL_COLON statement

    DL_COLON  shift, and go to state 85


State 65

   50 expression: simple_expression .
   51           | simple_expression . relop simple_expression

    KW_IN     shift, and go to state 86
    OP_LT     shift, and go to state 87
    OP_LE     shift, and go to state 88
    OP_GT     shift, and go to state 89
    OP_GE     shift, and go to state 90
    OP_EQUAL  shift, and go to state 91
    OP_NOTEQ  shift, and go to state 92

    $default  reduce using rule 50 (expression)

    relop  go to state 93


State 66

   52 simple_expression: term .
   53                  | term . addop simple_expression

    OP_ADD  shift, and go to state 94
    OP_SUB  shift, and go to state 95

    $default  reduce using rule 52 (simple_expression)

    addop  go to state 96


State 67

   54 term: factor .
   55     | factor . multop term

    OP_MUL  shift, and go to state 97
    OP_DIV  shift, and go to state 98

    $default  reduce using rule 54 (term)

    multop  go to state 99


State 68

   61 factor: sign . factor

    ID       shift, and go to state 31
    OP_ADD   shift, and go to state 57
    OP_SUB   shift, and go to state 58
    OP_NEG   shift, and go to state 59
    INTEGER  shift, and go to state 60
    FLOAT    shift, and go to state 61

    variable             go to state 62
    procedure_statement  go to state 63
    factor               go to state 100
    sign                 go to state 68


State 69

   43 for_statement: KW_FOR for_expression . KW_IN for_expression DL_COLON statement KW_ELSE DL_COLON statement
   44              | KW_FOR for_expression . KW_IN for_expression DL_COLON statement

    KW_IN  shift, and go to state 101


State 70

   45 for_expression: simple_expression .

    $default  reduce using rule 45 (for_expression)


State 71

   41 while_statement: KW_WHILE expression . DL_COLON statement
   42                | KW_WHILE expression . DL_COLON statement KW_ELSE DL_COLON statement

    DL_COLON  shift, and go to state 102


State 72

   30 statement: KW_RETURN expression .

    $default  reduce using rule 30 (statement)


State 73

   35 print_statement: KW_PRINT DL_LPAREN . expression DL_RPAREN

    ID       shift, and go to state 31
    OP_ADD   shift, and go to state 57
    OP_SUB   shift, and go to state 58
    OP_NEG   shift, and go to state 59
    INTEGER  shift, and go to state 60
    FLOAT    shift, and go to state 61

    variable             go to state 62
    procedure_statement  go to state 63
    expression           go to state 103
    simple_expression    go to state 65
    term                 go to state 66
    factor               go to state 67
    sign                 go to state 68


State 74

    7 compound_statement: KW_BEGIN statement_list KW_END .

    $default  reduce using rule 7 (compound_statement)


State 75

   22 statement_list: statement DL_SMCOLON . statement_list

    ID         shift, and go to state 31
    KW_BEGIN   shift, and go to state 21
    KW_IF      shift, and go to state 32
    KW_NOP     shift, and go to state 33
    KW_FOR     shift, and go to state 34
    KW_WHILE   shift, and go to state 35
    KW_RETURN  shift, and go to state 36
    KW_PRINT   shift, and go to state 37

    compound_statement   go to state 38
    statement_list       go to state 104
    statement            go to state 40
    variable             go to state 41
    print_statement      go to state 42
    procedure_statement  go to state 43
    if_statement         go to state 44
    while_statement      go to state 45
    for_statement        go to state 46


State 76

   23 statement: variable DL_ASSIGN . expression

    ID       shift, and go to state 31
    OP_ADD   shift, and go to state 57
    OP_SUB   shift, and go to state 58
    OP_NEG   shift, and go to state 59
    INTEGER  shift, and go to state 60
    FLOAT    shift, and go to state 61

    variable             go to state 62
    procedure_statement  go to state 63
    expression           go to state 105
    simple_expression    go to state 65
    term                 go to state 66
    factor               go to state 67
    sign                 go to state 68


State 77

   19 parameter_list: identifier_list DL_COLON . type
   20               | identifier_list DL_COLON . type DL_SMCOLON parameter_list

    KW_INT    shift, and go to state 6
    KW_FLOAT  shift, and go to state 7

    type           go to state 106
    standard_type  go to state 10


State 78

   17 arguments: DL_LPAREN parameter_list DL_RPAREN .

    $default  reduce using rule 17 (arguments)


State 79

   15 subprogram_head: KW_FUNC ID arguments DL_COLON standard_type . DL_SMCOLON

    DL_SMCOLON  shift, and go to state 107


State 80

   36 procedure_statement: ID DL_LPAREN actual_parameter_expression . DL_RPAREN

    DL_RPAREN  shift, and go to state 108


State 81

   47 actual_parameter_expression: expression_list .

    $default  reduce using rule 47 (actual_parameter_expression)


State 82

   48 expression_list: expression .
   49                | expression . DL_COMMA expression_list

    DL_COMMA  shift, and go to state 109

    $default  reduce using rule 48 (expression_list)


State 83

   33 variable: ID DL_LBRACK expression . DL_RBRACK

    DL_RBRACK  shift, and go to state 110


State 84

   60 factor: OP_NEG factor .

    $default  reduce using rule 60 (factor)


State 85

   37 if_statement: KW_IF expression DL_COLON . statement elif_statement
   38             | KW_IF expression DL_COLON . statement elif_statement KW_ELSE DL_COLON statement

    ID         shift, and go to state 31
    KW_BEGIN   shift, and go to state 21
    KW_IF      shift, and go to state 32
    KW_NOP     shift, and go to state 33
    KW_FOR     shift, and go to state 34
    KW_WHILE   shift, and go to state 35
    KW_RETURN  shift, and go to state 36
    KW_PRINT   shift, and go to state 37

    compound_statement   go to state 38
    statement            go to state 111
    variable             go to state 41
    print_statement      go to state 42
    procedure_statement  go to state 43
    if_statement         go to state 44
    while_statement      go to state 45
    for_statement        go to state 46


State 86

   70 relop: KW_IN .

    $default  reduce using rule 70 (relop)


State 87

   66 relop: OP_LT .

    $default  reduce using rule 66 (relop)


State 88

   67 relop: OP_LE .

    $default  reduce using rule 67 (relop)


State 89

   64 relop: OP_GT .

    $default  reduce using rule 64 (relop)


State 90

   65 relop: OP_GE .

    $default  reduce using rule 65 (relop)


State 91

   68 relop: OP_EQUAL .

    $default  reduce using rule 68 (relop)


State 92

   69 relop: OP_NOTEQ .

    $default  reduce using rule 69 (relop)


State 93

   51 expression: simple_expression relop . simple_expression

    ID       shift, and go to state 31
    OP_ADD   shift, and go to state 57
    OP_SUB   shift, and go to state 58
    OP_NEG   shift, and go to state 59
    INTEGER  shift, and go to state 60
    FLOAT    shift, and go to state 61

    variable             go to state 62
    procedure_statement  go to state 63
    simple_expression    go to state 112
    term                 go to state 66
    factor               go to state 67
    sign                 go to state 68


State 94

   71 addop: OP_ADD .

    $default  reduce using rule 71 (addop)


State 95

   72 addop: OP_SUB .

    $default  reduce using rule 72 (addop)


State 96

   53 simple_expression: term addop . simple_expression

    ID       shift, and go to state 31
    OP_ADD   shift, and go to state 57
    OP_SUB   shift, and go to state 58
    OP_NEG   shift, and go to state 59
    INTEGER  shift, and go to state 60
    FLOAT    shift, and go to state 61

    variable             go to state 62
    procedure_statement  go to state 63
    simple_expression    go to state 113
    term                 go to state 66
    factor               go to state 67
    sign                 go to state 68


State 97

   73 multop: OP_MUL .

    $default  reduce using rule 73 (multop)


State 98

   74 multop: OP_DIV .

    $default  reduce using rule 74 (multop)


State 99

   55 term: factor multop . term

    ID       shift, and go to state 31
    OP_ADD   shift, and go to state 57
    OP_SUB   shift, and go to state 58
    OP_NEG   shift, and go to state 59
    INTEGER  shift, and go to state 60
    FLOAT    shift, and go to state 61

    variable             go to state 62
    procedure_statement  go to state 63
    term                 go to state 114
    factor               go to state 67
    sign                 go to state 68


State 100

   61 factor: sign factor .

    $default  reduce using rule 61 (factor)


State 101

   43 for_statement: KW_FOR for_expression KW_IN . for_expression DL_COLON statement KW_ELSE DL_COLON statement
   44              | KW_FOR for_expression KW_IN . for_expression DL_COLON statement

    ID       shift, and go to state 31
    OP_ADD   shift, and go to state 57
    OP_SUB   shift, and go to state 58
    OP_NEG   shift, and go to state 59
    INTEGER  shift, and go to state 60
    FLOAT    shift, and go to state 61

    variable             go to state 62
    procedure_statement  go to state 63
    for_expression       go to state 115
    simple_expression    go to state 70
    term                 go to state 66
    factor               go to state 67
    sign                 go to state 68


State 102

   41 while_statement: KW_WHILE expression DL_COLON . statement
   42                | KW_WHILE expression DL_COLON . statement KW_ELSE DL_COLON statement

    ID         shift, and go to state 31
    KW_BEGIN   shift, and go to state 21
    KW_IF      shift, and go to state 32
    KW_NOP     shift, and go to state 33
    KW_FOR     shift, and go to state 34
    KW_WHILE   shift, and go to state 35
    KW_RETURN  shift, and go to state 36
    KW_PRINT   shift, and go to state 37

    compound_statement   go to state 38
    statement            go to state 116
    variable             go to state 41
    print_statement      go to state 42
    procedure_statement  go to state 43
    if_statement         go to state 44
    while_statement      go to state 45
    for_statement        go to state 46


State 103

   35 print_statement: KW_PRINT DL_LPAREN expression . DL_RPAREN

    DL_RPAREN  shift, and go to state 117


State 104

   22 statement_list: statement DL_SMCOLON statement_list .

    $default  reduce using rule 22 (statement_list)


State 105

   23 statement: variable DL_ASSIGN expression .

    $default  reduce using rule 23 (statement)


State 106

   19 parameter_list: identifier_list DL_COLON type .
   20               | identifier_list DL_COLON type . DL_SMCOLON parameter_list

    DL_SMCOLON  shift, and go to state 118

    $default  reduce using rule 19 (parameter_list)


State 107

   15 subprogram_head: KW_FUNC ID arguments DL_COLON standard_type DL_SMCOLON .

    $default  reduce using rule 15 (subprogram_head)


State 108

   36 procedure_statement: ID DL_LPAREN actual_parameter_expression DL_RPAREN .

    $default  reduce using rule 36 (procedure_statement)


State 109

   49 expression_list: expression DL_COMMA . expression_list

    ID       shift, and go to state 31
    OP_ADD   shift, and go to state 57
    OP_SUB   shift, and go to state 58
    OP_NEG   shift, and go to state 59
    INTEGER  shift, and go to state 60
    FLOAT    shift, and go to state 61

    variable             go to state 62
    procedure_statement  go to state 63
    expression_list      go to state 119
    expression           go to state 82
    simple_expression    go to state 65
    term                 go to state 66
    factor               go to state 67
    sign                 go to state 68


State 110

   33 variable: ID DL_LBRACK expression DL_RBRACK .

    $default  reduce using rule 33 (variable)


State 111

   37 if_statement: KW_IF expression DL_COLON statement . elif_statement
   38             | KW_IF expression DL_COLON statement . elif_statement KW_ELSE DL_COLON statement

    $default  reduce using rule 39 (elif_statement)

    elif_statement  go to state 120


State 112

   51 expression: simple_expression relop simple_expression .

    $default  reduce using rule 51 (expression)


State 113

   53 simple_expression: term addop simple_expression .

    $default  reduce using rule 53 (simple_expression)


State 114

   55 term: factor multop term .

    $default  reduce using rule 55 (term)


State 115

   43 for_statement: KW_FOR for_expression KW_IN for_expression . DL_COLON statement KW_ELSE DL_COLON statement
   44              | KW_FOR for_expression KW_IN for_expression . DL_COLON statement

    DL_COLON  shift, and go to state 121


State 116

   41 while_statement: KW_WHILE expression DL_COLON statement .
   42                | KW_WHILE expression DL_COLON statement . KW_ELSE DL_COLON statement

    KW_ELSE  shift, and go to state 122

    $default  reduce using rule 41 (while_statement)


State 117

   35 print_statement: KW_PRINT DL_LPAREN expression DL_RPAREN .

    $default  reduce using rule 35 (print_statement)


State 118

   20 parameter_list: identifier_list DL_COLON type DL_SMCOLON . parameter_list

    ID  shift, and go to state 16

    identifier_list  go to state 51
    parameter_list   go to state 123


State 119

   49 expression_list: expression DL_COMMA expression_list .

    $default  reduce using rule 49 (expression_list)


State 120

   37 if_statement: KW_IF expression DL_COLON statement elif_statement .
   38             | KW_IF expression DL_COLON statement elif_statement . KW_ELSE DL_COLON statement
   40 elif_statement: elif_statement . KW_ELIF expression DL_COLON statement

    KW_ELSE  shift, and go to state 124
    KW_ELIF  shift, and go to state 125

    $default  reduce using rule 37 (if_statement)


State 121

   43 for_statement: KW_FOR for_expression KW_IN for_expression DL_COLON . statement KW_ELSE DL_COLON statement
   44              | KW_FOR for_expression KW_IN for_expression DL_COLON . statement

    ID         shift, and go to state 31
    KW_BEGIN   shift, and go to state 21
    KW_IF      shift, and go to state 32
    KW_NOP     shift, and go to state 33
    KW_FOR     shift, and go to state 34
    KW_WHILE   shift, and go to state 35
    KW_RETURN  shift, and go to state 36
    KW_PRINT   shift, and go to state 37

    compound_statement   go to state 38
    statement            go to state 126
    variable             go to state 41
    print_statement      go to state 42
    procedure_statement  go to state 43
    if_statement         go to state 44
    while_statement      go to state 45
    for_statement        go to state 46


State 122

   42 while_statement: KW_WHILE expression DL_COLON statement KW_ELSE . DL_COLON statement

    DL_COLON  shift, and go to state 127


State 123

   20 parameter_list: identifier_list DL_COLON type DL_SMCOLON parameter_list .

    $default  reduce using rule 20 (parameter_list)


State 124

   38 if_statement: KW_IF expression DL_COLON statement elif_statement KW_ELSE . DL_COLON statement

    DL_COLON  shift, and go to state 128


State 125

   40 elif_statement: elif_statement KW_ELIF . expression DL_COLON statement

    ID       shift, and go to state 31
    OP_ADD   shift, and go to state 57
    OP_SUB   shift, and go to state 58
    OP_NEG   shift, and go to state 59
    INTEGER  shift, and go to state 60
    FLOAT    shift, and go to state 61

    variable             go to state 62
    procedure_statement  go to state 63
    expression           go to state 129
    simple_expression    go to state 65
    term                 go to state 66
    factor               go to state 67
    sign                 go to state 68


State 126

   43 for_statement: KW_FOR for_expression KW_IN for_expression DL_COLON statement . KW_ELSE DL_COLON statement
   44              | KW_FOR for_expression KW_IN for_expression DL_COLON statement .

    KW_ELSE  shift, and go to state 130

    $default  reduce using rule 44 (for_statement)


State 127

   42 while_statement: KW_WHILE expression DL_COLON statement KW_ELSE DL_COLON . statement

    ID         shift, and go to state 31
    KW_BEGIN   shift, and go to state 21
    KW_IF      shift, and go to state 32
    KW_NOP     shift, and go to state 33
    KW_FOR     shift, and go to state 34
    KW_WHILE   shift, and go to state 35
    KW_RETURN  shift, and go to state 36
    KW_PRINT   shift, and go to state 37

    compound_statement   go to state 38
    statement            go to state 131
    variable             go to state 41
    print_statement      go to state 42
    procedure_statement  go to state 43
    if_statement         go to state 44
    while_statement      go to state 45
    for_statement        go to state 46


State 128

   38 if_statement: KW_IF expression DL_COLON statement elif_statement KW_ELSE DL_COLON . statement

    ID         shift, and go to state 31
    KW_BEGIN   shift, and go to state 21
    KW_IF      shift, and go to state 32
    KW_NOP     shift, and go to state 33
    KW_FOR     shift, and go to state 34
    KW_WHILE   shift, and go to state 35
    KW_RETURN  shift, and go to state 36
    KW_PRINT   shift, and go to state 37

    compound_statement   go to state 38
    statement            go to state 132
    variable             go to state 41
    print_statement      go to state 42
    procedure_statement  go to state 43
    if_statement         go to state 44
    while_statement      go to state 45
    for_statement        go to state 46


State 129

   40 elif_statement: elif_statement KW_ELIF expression . DL_COLON statement

    DL_COLON  shift, and go to state 133


State 130

   43 for_statement: KW_FOR for_expression KW_IN for_expression DL_COLON statement KW_ELSE . DL_COLON statement

    DL_COLON  shift, and go to state 134


State 131

   42 while_statement: KW_WHILE expression DL_COLON statement KW_ELSE DL_COLON statement .

    $default  reduce using rule 42 (while_statement)


State 132

   38 if_statement: KW_IF expression DL_COLON statement elif_statement KW_ELSE DL_COLON statement .

    $default  reduce using rule 38 (if_statement)


State 133

   40 elif_statement: elif_statement KW_ELIF expression DL_COLON . statement

    ID         shift, and go to state 31
    KW_BEGIN   shift, and go to state 21
    KW_IF      shift, and go to state 32
    KW_NOP     shift, and go to state 33
    KW_FOR     shift, and go to state 34
    KW_WHILE   shift, and go to state 35
    KW_RETURN  shift, and go to state 36
    KW_PRINT   shift, and go to state 37

    compound_statement   go to state 38
    statement            go to state 135
    variable             go to state 41
    print_statement      go to state 42
    procedure_statement  go to state 43
    if_statement         go to state 44
    while_statement      go to state 45
    for_statement        go to state 46


State 134

   43 for_statement: KW_FOR for_expression KW_IN for_expression DL_COLON statement KW_ELSE DL_COLON . statement

    ID         shift, and go to state 31
    KW_BEGIN   shift, and go to state 21
    KW_IF      shift, and go to state 32
    KW_NOP     shift, and go to state 33
    KW_FOR     shift, and go to state 34
    KW_WHILE   shift, and go to state 35
    KW_RETURN  shift, and go to state 36
    KW_PRINT   shift, and go to state 37

    compound_statement   go to state 38
    statement            go to state 136
    variable             go to state 41
    print_statement      go to state 42
    procedure_statement  go to state 43
    if_statement         go to state 44
    while_statement      go to state 45
    for_statement        go to state 46


State 135

   40 elif_statement: elif_statement KW_ELIF expression DL_COLON statement .

    $default  reduce using rule 40 (elif_statement)


State 136

   43 for_statement: KW_FOR for_expression KW_IN for_expression DL_COLON statement KW_ELSE DL_COLON statement .

    $default  reduce using rule 43 (for_statement)
